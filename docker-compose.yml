# note:
# in production never hardcode your variables
# must be obtain via config repo or .env
services:
  postgres:
    image: postgres:latest # or preferred version
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: auth,users,products
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-scripts/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    networks:
      - microservices-network

  gateway:
    build:
      context: .
      dockerfile: dockerfile
    container_name: gateway
    restart: always
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - AUTH_TCP_PORT=4001
      - USER_TCP_PORT=4002
      - PRODUCT_TCP_PORT=4003
      - NODE_ENV=production
    depends_on:
      - postgres
      - auth
      - user
      - product
    command: bun run dist/apps/gateway/main.js
    networks:
      - microservices-network

  auth:
    build:
      context: .
      dockerfile: dockerfile
    container_name: auth
    restart: always
    ports:
      - "3001:3001"
      - "4001:4001"
    environment:
      - PORT=3001
      - TCP_PORT=4001
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/auth
      - JWT_SECRET=your_jwt_secret
      - NODE_ENV=production
    depends_on:
      - postgres
    command: bun run dist/apps/auth/main.js
    networks:
      - microservices-network

  user:
    build:
      context: .
      dockerfile: dockerfile
    container_name: user
    restart: always
    ports:
      - "3002:3002"
      - "4002:4002"
    environment:
      - PORT=3002
      - TCP_PORT=4002
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/users
      - JWT_SECRET=your_jwt_secret
      - NODE_ENV=production
    depends_on:
      - postgres
    command: bun run dist/apps/user/main.js
    networks:
      - microservices-network

  product:
    build:
      context: .
      dockerfile: dockerfile
    container_name: product
    restart: always
    ports:
      - "3003:3003"
      - "4003:4003"
    environment:
      - PORT=3003
      - TCP_PORT=4003
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/products
      - JWT_SECRET=your_jwt_secret
      - NODE_ENV=production
    depends_on:
      - postgres
    command: bun run dist/apps/product/main.js
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres_data: 